{"version":3,"file":"static/js/541.c97a89c2.chunk.js","mappings":"4PAEaA,EAAcC,EAAAA,EAAAA,GAAH,gPAYXC,EAAmBD,EAAAA,EAAAA,EAAH,sE,SCNhBE,EAAO,WAChB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,KAC5B,CAACC,KAGF,gCACGF,IACC,SAACL,EAAD,UACGK,EAAKO,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACzC,OACEA,IACE,2BACE,gBACEC,IAAG,UAnBJ,mCAmBI,OAAoBD,GACvBE,IAAKJ,KAEP,wBAAKA,KACL,4CAAkBC,OANXF,QAYF,IAAhBR,EAAKc,SACJ,SAACjB,EAAD,+DC9BV,EAJiB,kBACf,SAACC,EAAD,M,0MCDIiB,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,4FACb,sBADa,SAEPC,IAAAA,IAAA,UAClBH,GADkB,OADN,sBACM,mBACYC,EADZ,YAFO,cAExBG,EAFwB,OAKxBC,EAAUD,EAASE,KAAKD,QALA,kBAMvBA,GANuB,2CAAH,qDAShBE,EAAkB,mCAAG,WAAMC,GAAN,+EACd,gBADc,SAETL,IAAAA,IAAA,UAClBH,GADkB,OADL,gBACK,mBACaC,EADb,iCAC6CO,EAD7C,+BAFS,cAE1BJ,EAF0B,OAK1BC,EAAUD,EAASE,KAAKD,QALE,kBAMzBA,GANyB,2CAAH,sDASlBI,EAAc,mCAAG,WAAMtB,GAAN,+EACT,SADS,SAELgB,IAAAA,IAAA,UAClBH,GADkB,OADJ,UACI,OACMb,EADN,oBACyBc,EADzB,oBAFK,cAEtBG,EAFsB,OAKtBC,EAAUD,EAASE,KALG,kBAOrBD,GAPqB,2CAAH,sDAUdf,EAAY,mCAAG,WAAMH,GAAN,+EACP,SADO,SAEHgB,IAAAA,IAAA,UAClBH,GADkB,OADJ,UACI,OACMb,EADN,4BACiCc,EADjC,oBAFG,cAEpBG,EAFoB,OAKpBC,EAAUD,EAASE,KAAKrB,KALJ,kBAOnBoB,GAPmB,2CAAH,sDAUZK,EAAY,mCAAG,WAAMvB,GAAN,+EACP,SADO,SAEHgB,IAAAA,IAAA,UAClBH,GADkB,OADJ,UACI,OACMb,EADN,4BACiCc,EADjC,2BAFG,cAEpBG,EAFoB,OAKpBC,EAAUD,EAASE,KAAKD,QALJ,kBAOnBA,GAPmB,2CAAH","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","pages/CastPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastWrapper = styled.ul`\n  padding: 0 40px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-column-gap: 156px;\n  grid-row-gap: 2em;\n`;\n\nexport const NotificationText = styled.p`\n  display: flex;\n  justify-content: center;\n`;\n","import propTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCredits } from \"services/api\";\nimport { CastWrapper, NotificationText } from \"./Cast.styled\";\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w154';\n\nexport const Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        fetchCredits(movieId).then(setCast);\n    }, [movieId]);\n    \n    return (\n      <>\n        {cast &&\n          <CastWrapper>\n            {cast.map(({ id, original_name, character, profile_path }) => {\n              return (\n                profile_path && (\n                  <li key={id}>\n                    <img\n                      src={`${BASE_IMG_URL}${profile_path}`}\n                      alt={original_name}\n                    ></img>\n                    <h4>{original_name}</h4>\n                    <p>{`Character: ${character}`}</p>\n                  </li>\n                )\n              );\n            })}\n          </CastWrapper>}\n        {cast.length === 0 &&\n          <NotificationText>Sorry. We don't have any cast for this movie</NotificationText>}\n    </>\n)\n};\n\nCast.propTypes = {\n  cast: propTypes.shape({\n    id: propTypes.string.isRequired,\n    original_name: propTypes.string.isRequired,\n    character: propTypes.string.isRequired,\n    profile_path: propTypes.string.isRequired,\n  })\n};","import { Cast } from \"components/Cast/Cast\";\n\nconst CastPage = () => (\n  <Cast />\n);\n\nexport default CastPage;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aadcea8a3c7e0e5566343c1859f18989';\n\nexport const fetchTrendMovies = async () => {\n  const trendUrl = 'trending/movie/day?';\n  const response = await axios.get(\n    `${BASE_URL}${trendUrl}api_key=${API_KEY}&page=1`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchSearchedMovie = async searchFilm => {\n  const searchUrl = 'search/movie?';\n  const response = await axios.get(\n    `${BASE_URL}${searchUrl}api_key=${API_KEY}&language=en-US&query=${searchFilm}&page=1&include_adult=true`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const detailsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${detailsUrl}${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data;\n  // console.log(results)\n  return results;\n};\n\nexport const fetchCredits = async movieId => {\n  const creditsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${creditsUrl}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data.cast;\n  // console.log(results);\n  return results;\n};\n\nexport const fetchReviews = async movieId => {\n  const reviewsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${reviewsUrl}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  // console.log(results);\n  return results;\n};\n"],"names":["CastWrapper","styled","NotificationText","Cast","useState","cast","setCast","movieId","useParams","useEffect","fetchCredits","then","map","id","original_name","character","profile_path","src","alt","length","BASE_URL","API_KEY","fetchTrendMovies","axios","response","results","data","fetchSearchedMovie","searchFilm","fetchMovieById","fetchReviews"],"sourceRoot":""}