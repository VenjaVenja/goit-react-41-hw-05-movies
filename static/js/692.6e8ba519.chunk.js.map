{"version":3,"file":"static/js/692.6e8ba519.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n  padding: 0 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Description = styled.div`\n  margin-left: 50px;\n`;\n\nexport const BackBtnWrapper = styled.div`\n  display: flex;\n  margin-top: 20px;\n  padding-left: 20px;\n`;\n\nexport const AdditionalWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const AdditionalHeading = styled.h3`\n  display: flex;\n  margin: 0;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n`;\n\nexport const NavLinksList = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const NavLinkBtn = styled.li`\n  align-items: center;\n  appearance: none;\n  background-color: #fff;\n  border-radius: 24px;\n  border-style: none;\n  box-shadow: rgba(0, 0, 0, 0.2) 0 3px 5px -1px,\n    rgba(0, 0, 0, 0.14) 0 6px 10px 0, rgba(0, 0, 0, 0.12) 0 1px 18px 0;\n  box-sizing: border-box;\n  color: #3c4043;\n  cursor: pointer;\n  display: inline-flex;\n  fill: currentcolor;\n  font-family: 'Google Sans', Roboto, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  height: 48px;\n  justify-content: center;\n  letter-spacing: 0.25px;\n  line-height: normal;\n  max-width: 100%;\n  overflow: visible;\n  padding: 2px 24px;\n  position: relative;\n  text-align: center;\n  text-transform: none;\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),\n    opacity 15ms linear 30ms, transform 270ms cubic-bezier(0, 0, 0.2, 1) 0ms;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  width: auto;\n  will-change: transform, opacity;\n  z-index: 0;\n\n  &:hover {\n    background: #f6f9fe;\n    color: #174ea6;\n  }\n\n  &:active {\n    box-shadow: 0 4px 4px 0 rgb(60 64 67 / 30%),\n      0 8px 12px 6px rgb(60 64 67 / 15%);\n    outline: none;\n  }\n\n  &:focus {\n    outline: none;\n    border: 2px solid #4285f4;\n  }\n`;\n\nexport const GoBackBtn = styled(Link)`\n  align-items: center;\n  appearance: none;\n  background-color: #fff;\n  border-radius: 24px;\n  border-style: none;\n  box-shadow: rgba(0, 0, 0, 0.2) 0 3px 5px -1px,\n    rgba(0, 0, 0, 0.14) 0 6px 10px 0, rgba(0, 0, 0, 0.12) 0 1px 18px 0;\n  box-sizing: border-box;\n  color: #3c4043;\n  cursor: pointer;\n  display: inline-flex;\n  fill: currentcolor;\n  font-family: 'Google Sans', Roboto, Arial, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  height: 48px;\n  justify-content: center;\n  letter-spacing: 0.25px;\n  line-height: normal;\n  max-width: 100%;\n  overflow: visible;\n  padding: 2px 24px;\n  position: relative;\n  text-align: center;\n  text-transform: none;\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),\n    opacity 15ms linear 30ms, transform 270ms cubic-bezier(0, 0, 0.2, 1) 0ms;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  width: auto;\n  will-change: transform, opacity;\n  z-index: 0;\n\n  &:hover {\n    background: #f6f9fe;\n    color: #174ea6;\n  }\n\n  &:active {\n    box-shadow: 0 4px 4px 0 rgb(60 64 67 / 30%),\n      0 8px 12px 6px rgb(60 64 67 / 15%);\n    outline: none;\n  }\n\n  &:focus {\n    outline: none;\n    border: 2px solid #4285f4;\n  }\n`;\n","import propTypes from \"prop-types\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport {\n  NavLinkBtn,\n  NavLinksList,\n  MovieCardWrapper,\n  Description,\n  GoBackBtn,\n  BackBtnWrapper,\n  AdditionalHeading,\n  AdditionalWrapper\n} from \"./MovieInfo.styled\";\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const MovieInfo = ({ movie, movieId }) => {\n\n  const location = useLocation();\n \n  return (\n    <>\n      <BackBtnWrapper>\n      <GoBackBtn to={location?.state?.from ?? '/'}>Go back</GoBackBtn>\n      </BackBtnWrapper>\n\n      <MovieCardWrapper>\n        <img\n          src={`${BASE_IMG_URL}${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <Description>\n          <h2>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</h2>\n          <p>{`User Score: ${movie.vote_average * 10}%`}</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <p>{movie.genres.map(ganre => `${ganre.name} `)}</p>\n        </Description>\n      </MovieCardWrapper>\n  \n      <AdditionalWrapper>\n        <AdditionalHeading>Additional information</AdditionalHeading>\n        <NavLinksList>\n          <NavLinkBtn>\n            <NavLink to={`/movies/${movieId}/cast`}\n            state={{from: location.state.from}}>Cast</NavLink>\n          </NavLinkBtn>\n          <NavLinkBtn>\n            <NavLink to={`/movies/${movieId}/reviews`}\n            state={{from: location.state.from}}>Reviews</NavLink>\n          </NavLinkBtn>\n        </NavLinksList>\n      </AdditionalWrapper>\n    </>\n  )\n};\n\nMovieInfo.propTypes = {\n  movie: propTypes.shape({\n    poster_path: propTypes.string.isRequired,\n    title: propTypes.string.isRequired,\n    release_date: propTypes.string.isRequired,\n    vote_average: propTypes.number.isRequired,\n    overview: propTypes.string.isRequired,\n    genres: propTypes.arrayOf({\n      name: propTypes.string.isRequired,\n    }).isRequired\n  }),\n  movieId: propTypes.string.isRequired,\n  location: propTypes.func,\n};","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, Link } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { fetchMovieById } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  \n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovie)}, [movieId]);\n\n  return (\n    <>\n      {!movie && <Loader/> && <Link to={`/`}>Oops, something went wrong. Please try again later.</Link>}\n      {movie && <MovieInfo movie={movie} movieId={movieId} />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aadcea8a3c7e0e5566343c1859f18989';\n\nexport const fetchTrendMovies = async () => {\n  const trendUrl = 'trending/movie/day?';\n  const response = await axios.get(\n    `${BASE_URL}${trendUrl}api_key=${API_KEY}&page=1`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchSearchedMovie = async searchFilm => {\n  const searchUrl = 'search/movie?';\n  const response = await axios.get(\n    `${BASE_URL}${searchUrl}api_key=${API_KEY}&language=en-US&query=${searchFilm}&page=1&include_adult=true`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const detailsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${detailsUrl}${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data;\n  // console.log(results)\n  return results;\n};\n\nexport const fetchCredits = async movieId => {\n  const creditsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${creditsUrl}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data.cast;\n  // console.log(results);\n  return results;\n};\n\nexport const fetchReviews = async movieId => {\n  const reviewsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${reviewsUrl}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  // console.log(results);\n  return results;\n};\n"],"names":["MovieCardWrapper","styled","Description","BackBtnWrapper","AdditionalWrapper","AdditionalHeading","NavLinksList","NavLinkBtn","GoBackBtn","Link","MovieInfo","movie","movieId","location","useLocation","to","state","from","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","ganre","name","useState","setMovie","useParams","useEffect","fetchMovieById","then","Loader","BASE_URL","API_KEY","fetchTrendMovies","axios","response","results","data","fetchSearchedMovie","searchFilm","fetchCredits","cast","fetchReviews"],"sourceRoot":""}