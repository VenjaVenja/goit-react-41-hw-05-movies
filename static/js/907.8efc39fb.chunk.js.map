{"version":3,"file":"static/js/907.8efc39fb.chunk.js","mappings":"4PAEaA,EAAiBC,EAAAA,EAAAA,IAAH,0CAIdC,EAAmBD,EAAAA,EAAAA,EAAH,sE,SCAhBE,EAAU,WACnB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,KAC5B,CAACC,KAGA,UAACP,EAAD,WACGK,IACC,wBACGA,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAIF,GAAIA,EAAR,WACE,wBAAKC,KACL,uBAAIC,YAIM,IAAnBV,EAAQW,SACP,SAACd,EAAD,kECpBV,EAJoB,kBAClB,SAACC,EAAD,M,0MCDIc,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,4FACb,sBADa,SAEPC,IAAAA,IAAA,UAClBH,GADkB,OADN,sBACM,mBACYC,EADZ,YAFO,cAExBG,EAFwB,OAKxBC,EAAUD,EAASE,KAAKD,QALA,kBAMvBA,GANuB,2CAAH,qDAShBE,EAAkB,mCAAG,WAAMC,GAAN,+EACd,gBADc,SAETL,IAAAA,IAAA,UAClBH,GADkB,OADL,gBACK,mBACaC,EADb,iCAC6CO,EAD7C,+BAFS,cAE1BJ,EAF0B,OAK1BC,EAAUD,EAASE,KAAKD,QALE,kBAMzBA,GANyB,2CAAH,sDASlBI,EAAc,mCAAG,WAAMnB,GAAN,+EACT,SADS,SAELa,IAAAA,IAAA,UAClBH,GADkB,OADJ,UACI,OACMV,EADN,oBACyBW,EADzB,oBAFK,cAEtBG,EAFsB,OAKtBC,EAAUD,EAASE,KALG,kBAOrBD,GAPqB,2CAAH,sDAUdK,EAAY,mCAAG,WAAMpB,GAAN,+EACP,SADO,SAEHa,IAAAA,IAAA,UAClBH,GADkB,OADJ,UACI,OACMV,EADN,4BACiCW,EADjC,oBAFG,cAEpBG,EAFoB,OAKpBC,EAAUD,EAASE,KAAKK,KALJ,kBAOnBN,GAPmB,2CAAH,sDAUZZ,EAAY,mCAAG,WAAMH,GAAN,+EACP,SADO,SAEHa,IAAAA,IAAA,UAClBH,GADkB,OADJ,UACI,OACMV,EADN,4BACiCW,EADjC,2BAFG,cAEpBG,EAFoB,OAKpBC,EAAUD,EAASE,KAAKD,QALJ,kBAOnBA,GAPmB,2CAAH","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","pages/ReviewsPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const NotificationText = styled.p`\n  display: flex;\n  justify-content: center;\n`;\n","import propTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchReviews } from \"services/api\";\nimport { ReviewsWrapper, NotificationText } from \"./Reviews.styled\";\n\nexport const Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        fetchReviews(movieId).then(setReviews);\n    }, [movieId]);\n  \n    return (\n        <ReviewsWrapper>\n          {reviews && \n            <ul>\n              {reviews.map(({ id, author, content }) => (\n                <li id={id}>\n                  <h4>{author}</h4>\n                  <p>{content}</p>\n                </li>\n              ))}\n            </ul>}\n        {reviews.length === 0 &&\n          <NotificationText>Sorry. We don't have any reviews for this movie</NotificationText>}\n        </ReviewsWrapper>\n    );\n};\n\nReviews.propTypes = {\n  reviews: propTypes.shape({\n    id: propTypes.string.isRequired,\n    author: propTypes.string.isRequired,\n    content: propTypes.string.isRequired\n  })\n};","import { Reviews } from \"components/Reviews/Reviews\";\n\nconst ReviewsPage = () => (\n  <Reviews />\n);\n\nexport default ReviewsPage;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aadcea8a3c7e0e5566343c1859f18989';\n\nexport const fetchTrendMovies = async () => {\n  const trendUrl = 'trending/movie/day?';\n  const response = await axios.get(\n    `${BASE_URL}${trendUrl}api_key=${API_KEY}&page=1`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchSearchedMovie = async searchFilm => {\n  const searchUrl = 'search/movie?';\n  const response = await axios.get(\n    `${BASE_URL}${searchUrl}api_key=${API_KEY}&language=en-US&query=${searchFilm}&page=1&include_adult=true`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const detailsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${detailsUrl}${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data;\n  // console.log(results)\n  return results;\n};\n\nexport const fetchCredits = async movieId => {\n  const creditsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${creditsUrl}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data.cast;\n  // console.log(results);\n  return results;\n};\n\nexport const fetchReviews = async movieId => {\n  const reviewsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${reviewsUrl}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  // console.log(results);\n  return results;\n};\n"],"names":["ReviewsWrapper","styled","NotificationText","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","then","map","id","author","content","length","BASE_URL","API_KEY","fetchTrendMovies","axios","response","results","data","fetchSearchedMovie","searchFilm","fetchMovieById","fetchCredits","cast"],"sourceRoot":""}