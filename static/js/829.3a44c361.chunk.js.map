{"version":3,"file":"static/js/829.3a44c361.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.stuled.js","components/SearchBar/SearchBar.jsx","components/MoviesSearchList/MoviesSearchList.styled.js","components/MoviesSearchList/MoviesSearchList.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const FindBtn = styled.button`\n  background: linear-gradient(to bottom right, #ef4765, #ff9a5a);\n  border: 0;\n  border-radius: 12px;\n  color: #ffffff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: -apple-system, system-ui, 'Segoe UI', Roboto, Helvetica, Arial,\n    sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 2.5;\n  outline: transparent;\n  padding: 0 1rem;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow 0.2s ease-in-out;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n\n  &:not([disabled]):focus {\n    box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.5),\n      -0.125rem -0.125rem 1rem rgba(239, 71, 101, 0.5),\n      0.125rem 0.125rem 1rem rgba(255, 154, 90, 0.5);\n  }\n\n  &:not([disabled]):hover {\n    box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.5),\n      -0.125rem -0.125rem 1rem rgba(239, 71, 101, 0.5),\n      0.125rem 0.125rem 1rem rgba(255, 154, 90, 0.5);\n  }\n`;\n\nexport const FindInput = styled.input`\n  background: linear-gradient(to bottom right, #ffebbe, #fffbf4);\n  border: 0;\n  border-radius: 12px;\n  color: #0070a0;\n  cursor: pointer;\n  display: inline-block;\n  font-family: -apple-system, system-ui, 'Segoe UI', Roboto, Helvetica, Arial,\n    sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 2.5;\n  outline: transparent;\n  padding: 0 1rem;\n  text-align: center;\n  text-decoration: none;\n  transition: box-shadow 0.2s ease-in-out;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  margin-left: 10px;\n  width: 220px;\n`;\n\nexport const Wrapper = styled.div`\n  /* padding: 20px, 10px; */\n`;\n","import { useState } from \"react\";\nimport { Wrapper, Form, FindBtn, FindInput } from \"./SearchBar.stuled\";\n\nexport const SearchBar = ({onSubmit}) => {\n    const [searchFilm, setSearchFilm] = useState('');\n\n    const onFilmSearch = event => {\n        const { value } = event.currentTarget;\n        setSearchFilm(value);\n    };\n\n    const heandleSubmit = event => {\n        event.preventDefault();\n\n        if (searchFilm.trim() === '') {\n            alert('Please enter the somthing to find');\n            return;\n        }\n        onSubmit(searchFilm);\n    };\n\n    return (\n        <Wrapper>\n            <Form onSubmit={heandleSubmit}>\n                <FindBtn type=\"submit\">Let`s find movie</FindBtn>\n\n                <FindInput\n                    type=\"text\"\n                    name=\"searchImg\"\n                    value={searchFilm}\n                    onChange={onFilmSearch}\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search film\"\n                />\n            </Form>\n        </Wrapper>\n    )\n};","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  padding: 20px 15px;\n  background-color: #e6f0f0;\n`;\n\nexport const FilsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilmsListItem = styled.li`\n  margin-top: 5px;\n`;\n\nexport const NotificationText = styled.p`\n  display: flex;\n  justify-content: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { fetchSearchedMovie } from 'services/api';\nimport {\n  Wrapper,\n  FilsList,\n  FilmsListItem,\n  NotificationText\n} from './MoviesSearchList.styled';\nimport propTypes from 'prop-types';\n\n\nexport const MoviesSearchList = () => {\n  const [films, setFilms] = useState([]);\n  const [searchFilm, setSearchFilm] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (searchFilm === '') {\n      return;\n    }\n    fetchSearchedMovie(searchFilm).then(setFilms)}, [searchFilm]);\n\n  useEffect(() => {\n    if (searchQuery === '' || searchQuery === null) {\n      return;\n    }\n    fetchSearchedMovie(searchQuery).then(setFilms)}, [searchQuery]);\n  \n  const onSearchFilm = searchFilm => {\n    setSearchFilm(searchFilm);\n    setSearchParams({query: searchFilm})\n  };\n\n  return (\n    <Wrapper> \n      {<SearchBar onSubmit={onSearchFilm} />}\n      {films.length ===0 && <NotificationText>Please enter search movie text </NotificationText>}\n      {films && searchQuery &&\n       <FilsList>\n          {films.map(({ id, title, original_name }) => (\n            <FilmsListItem key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location.pathname + location.search }}>\n                {title || original_name}\n              </Link>\n            </FilmsListItem>\n          ))}\n        </FilsList>}\n\n    </Wrapper>\n  );\n};\n\nMoviesSearchList.propTypes = {\n  filsm: propTypes.shape({\n    id: propTypes.string.isRequired,\n    title: propTypes.string.isRequired,\n    original_name: propTypes.string.isRequired,\n  }),\n  location: propTypes.shape({\n    pathname: propTypes.string.isRequired,\n    search: propTypes.string.isRequired\n  }),\n  onSearchFilm: propTypes.func\n};","import { MoviesSearchList } from \"components/MoviesSearchList/MoviesSearchList\";\n\nconst MoviesPage = () => (\n  <MoviesSearchList />\n);\n\nexport default MoviesPage;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'aadcea8a3c7e0e5566343c1859f18989';\n\nexport const fetchTrendMovies = async () => {\n  const trendUrl = 'trending/movie/day?';\n  const response = await axios.get(\n    `${BASE_URL}${trendUrl}api_key=${API_KEY}&page=1`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchSearchedMovie = async searchFilm => {\n  const searchUrl = 'search/movie?';\n  const response = await axios.get(\n    `${BASE_URL}${searchUrl}api_key=${API_KEY}&language=en-US&query=${searchFilm}&page=1&include_adult=true`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const detailsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${detailsUrl}${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data;\n  // console.log(results)\n  return results;\n};\n\nexport const fetchCredits = async movieId => {\n  const creditsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${creditsUrl}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const results = response.data.cast;\n  // console.log(results);\n  return results;\n};\n\nexport const fetchReviews = async movieId => {\n  const reviewsUrl = 'movie/';\n  const response = await axios.get(\n    `${BASE_URL}${reviewsUrl}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const results = response.data.results;\n  // console.log(results);\n  return results;\n};\n"],"names":["Form","styled","FindBtn","FindInput","Wrapper","SearchBar","onSubmit","useState","searchFilm","setSearchFilm","event","preventDefault","trim","alert","type","name","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","FilsList","FilmsListItem","NotificationText","MoviesSearchList","films","setFilms","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","fetchSearchedMovie","then","query","length","map","id","title","original_name","to","state","from","pathname","search","BASE_URL","API_KEY","fetchTrendMovies","axios","response","results","data","fetchMovieById","movieId","fetchCredits","cast","fetchReviews"],"sourceRoot":""}